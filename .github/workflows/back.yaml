name: Deploy simple hello app to GKE

on:
  push:
    branches:
    - main

env:
  PROJECT_ID: github-actions-339911
  GKE_CLUSTER: gha-cluster    # TODO: update to cluster name
  GKE_ZONE: europe-north1-a	   # TODO: update to cluster zone
  DEPLOYMENT_NAME: back # TODO: update deployment name if changed in deployment.yaml
  REGISTRY_HOSTNAME: gcr.io/github-actions-339911
  IMAGE: back


jobs:
  zzz:
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    
    - name: 'Check out repository code'
      uses: actions/checkout@v2
    - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
    - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
    
    
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/321169889619/locations/global/workloadIdentityPools/gha-pool/providers/gha-provider'
        service_account: 'gha-service-acc@github-actions-339911.iam.gserviceaccount.com'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v0'
      with:
        cluster_name: 'gha-cluster'
        location: 'europe-north1-a'

    # The KUBECONFIG env var is automatically exported and picked up by kubectl.
    - id: 'get-pods'
      run: 'kubectl get pods'        

    # Deploy sample image to the GKE cluster
    #- name: Deploy
      #working-directory: back
      #run: |-
        #kubectl apply -f back-deployment.yaml
        #kubectl rollout status deployment/$DEPLOYMENT_NAME
        #kubectl get services -o wide
